version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start.sh
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - redis
      - db
    dns:
      - 10.0.2.20
    networks:
      - ls

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker.sh
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - db
    dns:
      - 10.0.2.20
    networks:
      - ls
  
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - ls

  redis:
    image: redis:7-alpine
    networks:
      - ls
  
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    volumes:
      - ./docker/local/localstack/setup.sh:/etc/localstack/init/ready.d/script.sh
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      ls:
        ipv4_address: 10.0.2.20

volumes:
  postgres_data:

# https://docs.localstack.cloud/references/network-troubleshooting/endpoint-url/#from-your-container
# we want localhost.localstack.cloud to resolve to the localstack instance
# so we can use one endpoint from both inside and outside the containers
networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.2.0/24