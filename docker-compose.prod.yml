version: '3.8'

services:
  web:
    image: ${ITGDB_DJANGO_IMAGE}
    command: /start.sh
    restart: always
    volumes:
      - uploads:/app/uploads
    expose:
      - 8000
    env_file:
      - ./.env
      - ./.env.vhost
    depends_on:
      - redis
      - db

  celery_worker:
    image: ${ITGDB_DJANGO_IMAGE}
    command: /start-celeryworker.sh
    restart: always
    volumes:
      - uploads:/app/uploads
    env_file:
      - ./.env
    depends_on:
      - redis
      - db
  
  db:
    image: postgres:16-alpine
    volumes:
      - prod_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  redis:
    image: redis:7-alpine

  nginx-proxy:
    container_name: nginx-proxy
    build:
      context: ./docker/prod/nginx
      args:
        - HOST_DOMAIN=${HOST_DOMAIN}
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./log/nginx:/var/log/nginx
    depends_on:
      - web
    
  acme-companion:
    image: nginxproxy/acme-companion
    env_file:
      - ./.env.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  prod_postgres_data:
  uploads:
  certs:
  html:
  vhost:
  acme: